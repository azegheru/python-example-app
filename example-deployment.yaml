---
# Source: blu-microservice/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: example-python
  labels:
    helm.sh/chart: blu-microservice-0.14.0
    app.kubernetes.io/name: example-python
    app.kubernetes.io/version: "1"
spec:
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: example-python
---
# Source: blu-microservice/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-python
  labels:
    app.kubernetes.io/name: example-python
    app.kubernetes.io/version: "1"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: example-python
  template:
    metadata:
      labels:
        app.kubernetes.io/name: example-python
    spec:
      containers:
        - name: app
          image: andreizegheru/python-example-app:latest
          env:
            - name: RECOMMENDATION_SERVICE_PORT
              value: 80
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # command: [ "python" ]
          # args: [ "src/server.py" ]
          resources:
            requests:
              memory: 128Mi
              cpu: 16m
            limits:
              memory: 128Mi
              # cpu: per default we don't set a cpu limit (allow burst load / cpu is shared)
          livenessProbe:
            tcpSocket:
              port: 8080  
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            runAsNonRoot: true
      automountServiceAccountToken: false
      # Spread load over availability zones
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: DoNotSchedule
          topologyKey: topology.kubernetes.io/zone
          labelSelector:
            matchLabels: 
              app.kubernetes.io/name: example-python
